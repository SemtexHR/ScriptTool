name: "Build & Publish App"
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: install frontend dependencies
        run: npm install

      - name: Build app
        uses: tauri-apps/tauri-action@v0.5.23
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: v__VERSION__
          releaseName: "(S)cripty v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: "--target ${{ matrix.target }}"

      - name: Save Windows signature
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          Copy-Item "src-tauri\target\x86_64-pc-windows-msvc\release\bundle\msi\*.sig" -Destination "win_sig.txt"
      - uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: win-sig
          path: win_sig.txt
          
  create-json:
    runs-on: ubuntu-latest
    needs: publish-tauri
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: win-sig
          path: .
  
      - name: Get latest release tag & version
        id: get_tag
        run: |
          TAG=$(gh release list --limit 1 --json tagName --jq '.[0].tagName')
          VERSION=${TAG#v}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Build latest.json
        run: |
          SIG_WIN=$(cat win_sig.txt)
          VERSION="${{ steps.get_tag.outputs.version }}"
  
          cat > latest.json << EOF
          {
            "version": "${VERSION}",
            "notes": "See the assets to download this version and install.",
            "pub_date": "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)",
            "platforms": {
              "windows-x86_64": {
                "signature": "$SIG_WIN",
                "url": "https://github.com/${GITHUB_REPOSITORY}/releases/download/${{ steps.get_tag.outputs.tag }}/S.cripty_${VERSION}_x64_en-US.msi"
              }
            }
          }
          EOF
  
      - name: Upload latest.json
        run: gh release upload ${{ steps.get_tag.outputs.tag }} latest.json --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
